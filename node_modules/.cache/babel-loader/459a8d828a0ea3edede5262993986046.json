{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nimport { organizeByConsultants } from \"../assets/util/util\";\nimport { calculationsOfAmounts } from \"../util\";\nexport default {\n  props: ['parentData'],\n  components: {\n    apexchart: VueApexCharts\n  },\n  data: () => ({\n    dataGraphPizza: [],\n    loading: false,\n    series: [],\n    chartOptions: {\n      chart: {\n        width: 380,\n        type: 'pie'\n      },\n      labels: [],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    }\n  }),\n  watch: {\n    parentData() {\n      if (this.parentData.length > 0) {\n        this.initialize();\n      } else {\n        this.series = [];\n        this.$emit(\"resetComponentValue\", '');\n      }\n    },\n\n    loading(val) {\n      if (!val) return;\n      setTimeout(() => this.loading = false, 10000);\n    }\n\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  mounted() {\n    organizeByConsultants();\n  },\n\n  methods: {\n    async initialize() {\n      this.loading = true;\n      const itemConsultants = this.parentData.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request); //response service\n\n        const dataConsultan = response.data;\n        const itemsSelect = this.parentData; // const organizedData = dataConsultan.reduce(function (acumulador, valorActual){\n        //   const name = listSelect.find((consultant) => { \n        //     return consultant.co_usuario === valorActual.co_usuario;\n        //   });\n        //   let valorActualAssignName = Object.assign({name:name.no_usuario}, valorActual);\n        //   acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || [];\n        //   acumulador[valorActual.co_usuario].push(valorActualAssignName);\n        //   return acumulador;\n        // }, {});\n\n        const dataOrganizeConsultant = organizeByConsultants(dataConsultan, itemsSelect);\n        this.series.splice(0, 4);\n        let nameConsultan = [];\n        let status = [];\n\n        for (let key in dataOrganizeConsultant) {\n          let suma = dataOrganizeConsultant[key].reduce((previousValue, currentValue) => {\n            return previousValue + currentValue.total_net_earnings;\n          }, 0);\n          let total = parseInt(suma / dataOrganizeConsultant[key].length);\n          nameConsultan.push(dataOrganizeConsultant[key][0].name);\n          this.series.push(total); // this.chartOptions.labels.push(dataOrganizeConsultant[key][0].name)\n        } // this.$refs.radar.updateSeries(status)\n\n\n        this.$refs.radar.updateOptions({\n          labels: nameConsultan\n        });\n        this.loading = false;\n        console.log(\"aqui abajo\", this.series);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    organizeByConsultants\n  }\n};","map":{"version":3,"mappings":"AA0BA;AACA;AACA;AACA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,kBADA;IAEAC,cAFA;IAGAC,UAHA;IAIAC;MACAC;QACAC,UADA;QAEAC;MAFA,CADA;MAKAC,UALA;MAMAC;QACAC,eADA;QAEAC;UACAN;YACAC;UADA,CADA;UAIAM;YACAC;UADA;QAJA;MAFA;IANA;EAJA,EALA;EA4BAC;IACAC;MACA;QAEA;MACA,CAHA,MAIA;QACA;QACA;MACA;IACA,CAVA;;IAWAb;MACA;MACAc;IACA;;EAdA,CA5BA;;EA4CAC;IACA;EACA,CA9CA;;EA+CAC;IACAC;EACA,CAjDA;;EAkDAC;IACA;MACA;MACA;QACA;MACA,CAFA;MAGA;QACAC;MADA;;MAGA;QAEA,2FAFA,CAEA;;QAEA;QACA,oCALA,CAOA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;;QACA;QACA;QACA;QACA;;QACA,wCACA;UACA;YACA;UACA,CAFA,EAEA,CAFA;UAIA;UACAC;UACA,wBAPA,CAQA;QACA,CA/BA,CAgCA;;;QACA;UACAd;QADA;QAGA;QACAe;MACA,CAtCA,CAsCA;QACAA;MACA;IACA,CAlDA;;IAmDAJ;EAnDA;AAlDA","names":["props","components","apexchart","data","dataGraphPizza","loading","series","chartOptions","chart","width","type","labels","responsive","breakpoint","options","legend","position","watch","parentData","setTimeout","created","mounted","organizeByConsultants","methods","item_consultants","nameConsultan","console"],"sourceRoot":"src/components","sources":["GraphPizza.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card \r\n      outlined\r\n      class=\"my-4 mx-auto border border-secondary\"\r\n    >\r\n      <v-progress-linear\r\n        :active=\"loading\"\r\n        :indeterminate=\"loading\"\r\n        absolute\r\n        color=\"deep-purple accent-4\"\r\n      ></v-progress-linear>\r\n      <apexchart \r\n        type=\"pie\"\r\n        height=\"350\"\r\n        ref=\"radar\"\r\n        :options=\"chartOptions\" \r\n        :series=\"series\"\r\n        class=\"pt-3 mx-auto\"\r\n      >\r\n      </apexchart>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport { organizeByConsultants } from \"../assets/util/util\"\r\nimport { calculationsOfAmounts } from \"../util\"\r\nexport default {\r\n  props: ['parentData'],\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  data: () => ({\r\n    dataGraphPizza: [],\r\n    loading: false,\r\n    series: [],\r\n    chartOptions: {\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n      },\r\n      labels: [],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n  }),\r\n  watch:{\r\n    parentData(){\r\n      if(this.parentData.length > 0) {\r\n        \r\n        this.initialize();\r\n      }\r\n      else{\r\n        this.series = []\r\n        this.$emit(\"resetComponentValue\", '');\r\n      }\r\n    },\r\n    loading (val) {\r\n      if (!val) return\r\n      setTimeout(() => (this.loading = false), 10000)\r\n    },\r\n  },\r\n  created() {\r\n    this.initialize();\r\n  },\r\n  mounted() {\r\n    organizeByConsultants();\r\n  },\r\n  methods: {\r\n    async initialize(){\r\n      this.loading = true;\r\n      const itemConsultants = this.parentData.map((v) => {\r\n        return v.co_usuario\r\n      });\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n      try {\r\n        \r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request);//response service\r\n\r\n        const dataConsultan = response.data;\r\n        const itemsSelect = this.parentData;\r\n\r\n        // const organizedData = dataConsultan.reduce(function (acumulador, valorActual){\r\n        //   const name = listSelect.find((consultant) => { \r\n        //     return consultant.co_usuario === valorActual.co_usuario;\r\n        //   });\r\n        //   let valorActualAssignName = Object.assign({name:name.no_usuario}, valorActual);\r\n        //   acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || [];\r\n        //   acumulador[valorActual.co_usuario].push(valorActualAssignName);\r\n        //   return acumulador;\r\n\r\n        // }, {});\r\n        const dataOrganizeConsultant = organizeByConsultants(dataConsultan, itemsSelect);\r\n        this.series.splice(0,4)\r\n        let nameConsultan = [];\r\n        let status = []\r\n        for (let key in dataOrganizeConsultant)\r\n        {\r\n          let suma = dataOrganizeConsultant[key].reduce((previousValue, currentValue) => {\r\n            return previousValue + currentValue.total_net_earnings\r\n          },0)\r\n\r\n          let total = parseInt(suma/dataOrganizeConsultant[key].length)\r\n          nameConsultan.push(dataOrganizeConsultant[key][0].name);\r\n          this.series.push(total);\r\n          // this.chartOptions.labels.push(dataOrganizeConsultant[key][0].name)\r\n        }\r\n        // this.$refs.radar.updateSeries(status)\r\n        this.$refs.radar.updateOptions({\r\n          labels: nameConsultan\r\n        });\r\n        this.loading = false;\r\n        console.log(\"aqui abajo\", this.series)\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    organizeByConsultants,\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}