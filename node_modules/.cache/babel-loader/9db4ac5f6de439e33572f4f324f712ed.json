{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nexport default {\n  props: ['parentData'],\n  components: {\n    apexchart: VueApexCharts\n  },\n  data: () => ({\n    dataGraph: [],\n    series: [44, 55, 13, 43, 22],\n    chartOptions: {\n      chart: {\n        width: 380,\n        type: 'pie'\n      },\n      labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    }\n  }),\n  watch: {\n    parentData() {\n      if (this.parentData.length > 0) {\n        this.netEarnings();\n      } else {\n        this.dataGraph = [];\n        this.$emit(\"resetComponentValue\", '');\n      }\n    }\n\n  },\n\n  created() {\n    this.netEarnings();\n  },\n\n  methods: {\n    async netEarnings() {\n      const itemConsultants = this.parentData.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS_FIXED_COST\", request); //response service\n\n        const dataConsultan = response.data;\n        const listSelect = this.parentData;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcA;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,aADA;IAEAC,4BAFA;IAGAC;MACAC;QACAC,UADA;QAEAC;MAFA,CADA;MAKAC,0DALA;MAMAC;QACAC,eADA;QAEAC;UACAN;YACAC;UADA,CADA;UAIAM;YACAC;UADA;QAJA;MAFA;IANA;EAHA,EALA;EA2BAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;QACA;MACA;IACA;;EATA,CA3BA;;EAsCAC;IACA;EACA,CAxCA;;EAyCAC;IACA;MAEA;QACA;MACA,CAFA;MAIA;QACAC;MADA;;MAIA;QACA,sGADA,CACA;;QAEA;QAEA;MAIA,CATA,CASA;QACAC;MACA;IACA;;EAvBA;AAzCA","names":["props","components","apexchart","data","dataGraph","series","chartOptions","chart","width","type","labels","responsive","breakpoint","options","legend","position","watch","parentData","created","methods","item_consultants","console"],"sourceRoot":"src/components","sources":["GraphPizza.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <apexchart \r\n        type=\"pie\"\r\n        height=\"350\" \r\n        :options=\"chartOptions\" \r\n        :series=\"series\"\r\n        class=\"pt-3 mx-auto\"\r\n      >\r\n      </apexchart>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\n\r\nexport default {\r\n  props: ['parentData'],\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  data: () => ({\r\n    dataGraph: [],\r\n    series: [44, 55, 13, 43, 22],\r\n    chartOptions: {\r\n    chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n    },\r\n    labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n    responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n        chart: {\r\n          width: 200\r\n        },\r\n        legend: {\r\n          position: 'bottom'\r\n        }\r\n      }\r\n    }]\r\n    },\r\n  }),\r\n  watch:{\r\n    parentData(){\r\n      if(this.parentData.length > 0) {\r\n        this.netEarnings();\r\n      }\r\n      else{\r\n        this.dataGraph = [];\r\n        this.$emit(\"resetComponentValue\", '');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.netEarnings();\r\n  },\r\n  methods: {\r\n  async netEarnings(){\r\n    \r\n      const itemConsultants = this.parentData.map((v) => {\r\n          return v.co_usuario\r\n      });\r\n\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n\r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS_FIXED_COST\", request);//response service\r\n        \r\n        const dataConsultan = response.data;\r\n\r\n        const listSelect = this.parentData;\r\n        \r\n\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}