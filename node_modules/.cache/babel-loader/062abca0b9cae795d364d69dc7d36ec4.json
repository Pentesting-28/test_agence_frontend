{"ast":null,"code":"export default {\n  name: 'ConsultantsComponent',\n  data: () => ({\n    listConsultants: [],\n    selectConsultants: [],\n    addSelectConsultants: [],\n    removeSelectConsultants: []\n  }),\n  computed: {\n    ItemsConsultants() {\n      return this.$store.getters[\"consultant/GET_CONSULTANTS\"];\n    }\n\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    async initialize() {\n      try {\n        const response = await this.$store.dispatch(\"consultant/INDEX_CONSULTANTS\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    addSelectBox() {\n      for (let index = 0; index < this.selectConsultants.length; index++) {\n        const position = this.ItemsConsultants.findIndex(element => {\n          return element.co_usuario == this.selectConsultants[index];\n        });\n\n        if (position !== undefined) {\n          this.addSelectConsultants.push(this.ItemsConsultants[position]); // console.log(this.addSelectConsultants)\n\n          this.ItemsConsultants.splice(position, 1);\n        }\n      }\n    },\n\n    removeSelectBox() {\n      for (let index = 0; index < this.removeSelectConsultants.length; index++) {\n        const position = this.addSelectConsultants.findIndex(element => {\n          return element.co_usuario == this.removeSelectConsultants[index];\n        });\n\n        if (position !== undefined) {\n          this.ItemsConsultants.push(this.addSelectConsultants[position]);\n          this.addSelectConsultants.splice(position, 1);\n          this.sortArray(this.ItemsConsultants);\n        }\n      }\n    },\n\n    sortArray(listConsultants) {\n      listConsultants.sort((a, b) => a.no_usuario < b.no_usuario ? -1 : +(a.no_usuario > b.no_usuario));\n    },\n\n    async report() {\n      const itemConsultants = this.addSelectConsultants.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_SHOW\", request);\n        const dataOp = response.data;\n        let newData = []; // var cars = [\n        //   { \n        //     make: 'audi',\n        //     model: 'r8',\n        //     year: '2012'\n        //   },\n        //   { \n        //     make: 'audi',\n        //     model: 'rs5',\n        //     year: '2013' \n        //   },\n        //   { \n        //     make: 'ford',\n        //     model: 'mustang',\n        //     year: '2012'\n        //   },\n        //   {\n        //     make: 'ford',\n        //     model: 'fusion',\n        //     year: '2015' \n        //   },\n        //   {\n        //     make: 'kia',\n        //     model: 'optima',\n        //     year: '2012'\n        //   }\n        // ];\n\n        const result = dataOp.reduce(function (r, a) {\n          r[a.co_usuario] = r[a.co_usuario] || [];\n          r[a.co_usuario].push(a);\n          return r;\n        }, Object.create(null)); // console.log(result);\n        // let resultt = Object.assign(result['anapaula.chiodaro'],[{\n        //     make: 'kia',\n        //     model: 'optima',\n        //     year: '2012'\n        //   }]);\n        // let resultt = carss.reduce((h, a) => Object.assign(h, { [a.make]:( h[a.make] || [] ).concat(a) }), {})\n        // console.log(resultt)\n\n        this.listConsultants = result; // for (const al of itemConsultants) {\n        //   // for (let o of dataOp) {\n        //     for (let index = 0; index < dataOp.length; index++) {\n        //       newData.push(al: []);\n        //       // data.al.push({ id:i, preg:[] });\n        //       // data[data.length-1].preg.push( {pid: i, preg: \"Aqui pregunta\" });\n        //       newData[index].al=dataOp[index];\n        //       // console.log(dataOp[index])\n        //     }\n        //     // if(o.co_usuario == al){\n        //     //   newData[al] == [].push(o)\n        //     // }\n        // //     // console.log(o.co_usuario)\n        //   // }\n        // }\n        // let data = dataOp.map(function(obj){\n        //   // newData.push(obj)\n        //   return newData;\n        // });\n        // console.log(newData)\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    finalOperation(params, key, type = true) {\n      if (!Array.isArray(params)) {\n        return null;\n      }\n\n      let j = 1;\n      let total = params[0][key];\n\n      if (!total) {\n        return 0;\n      }\n\n      while (j < params.length) {\n        if (type) {\n          total += params[j][key];\n        } else {\n          total -= params[j][key];\n        }\n\n        j++;\n      }\n\n      return Math.round(total, 3, 2);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmLA;EACAA,4BADA;EAEAC;IACAC,mBADA;IAEAC,qBAFA;IAGAC,wBAHA;IAIAC;EAJA,EAFA;EAQAC;IACAC;MACA;IACA;;EAHA,CARA;;EAaAC;IACA;EACA,CAfA;;EAgBAC;IACA;MACA;QACA;MACA,CAFA,CAEA;QACAC;MACA;IACA,CAPA;;IAQAC;MACA,oEACA;QACA;UACA;QACA,CAFA;;QAGA,4BACA;UACA,gEADA,CAEA;;UACA;QACA;MACA;IACA,CArBA;;IAsBAC;MACA,0EACA;QACA;UACA;QACA,CAFA;;QAGA,4BACA;UACA;UACA;UACA;QACA;MACA;IACA,CAnCA;;IAoCAC;MACAX;IACA,CAtCA;;IAuCA;MACA;QACA;MACA,CAFA;MAGA;QACAY;MADA;;MAGA;QACA;QACA;QACA,iBAHA,CAIA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QACA;UACAC;UAEAA;UACA;QACA,CALA,EAKAC,mBALA,EA/BA,CAsCA;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,8BAjDA,CAkDA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QAEA;QACA;QACA;QACA;QAGA;QAEA;QACA;QAEA;QAEA;QACA;QACA;MACA,CA9EA,CA8EA;QACAN;MACA;IACA,CA/HA;;IAgIAO;MACA;QACA;MACA;;MAEA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;UACAC;QACA,CAFA,MAGA;UACAA;QACA;;QACAC;MACA;;MAEA;IACA;;EAvJA;AAhBA","names":["name","data","listConsultants","selectConsultants","addSelectConsultants","removeSelectConsultants","computed","ItemsConsultants","created","methods","console","addSelectBox","removeSelectBox","sortArray","item_consultants","r","Object","finalOperation","total","j"],"sourceRoot":"src/components","sources":["Consultants.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-container \r\n      class=\"grey lighten-5 mb-6\"\r\n    >\r\n      <v-row\r\n        no-gutters\r\n        style=\"height: 220px;\"\r\n        class=\"center\"\r\n      >\r\n        <v-col\r\n        cols=\"12\"\r\n        md=\"12\"\r\n        >\r\n          <v-card\r\n            class=\"pa-2 border border-secondary\"\r\n            outlined\r\n            tile\r\n          >\r\n            <v-simple-table >\r\n              <template v-slot:default>\r\n                  <tbody class=\"text-center\">\r\n                      <tr class=\"border border-secondary\">\r\n                          <th colspan=\"1\">Per√≠odo</th>\r\n                          <th scope=\"col\">FIltros</th>\r\n                          <th scope=\"col\">Accion</th>\r\n                      </tr>\r\n                  <tr class=\"border border-secondary\">\r\n                    <th scope=\"row\">Consultores</th>\r\n                    <td colspan=\"1\" class=\"border border-secondary\">\r\n                      <v-row\r\n                        no-gutters\r\n                        style=\"height: 150px;\"\r\n                      >\r\n                        <v-col cols=\"5\" md=\"5\" class=\"pa-5\">\r\n                          <font color=\"black\">\r\n                              <select name=\"select2\" size=\"6\" style=\"width: 223px;\" class=\"border border-secondary\" multiple v-model=\"selectConsultants\">\r\n                                  <option\r\n                                      v-for=\"(shape, i) in ItemsConsultants\"\r\n                                      :key=\"i\"\r\n                                      :value=\"shape.co_usuario\">\r\n                                      {{ shape.no_usuario }}\r\n                                  </option>\r\n                              </select>\r\n                          </font>\r\n                        </v-col>\r\n                        <v-col cols=\"2\" md=\"2\" class=\"pa-5\">\r\n                          <div class=\"btn-group-vertical pa-5\">\r\n                            <v-btn\r\n                              depressed\r\n                              x-small\r\n                              color=\"primary\"\r\n                              class=\"mb-3\"\r\n                              @click=\"addSelectBox()\"\r\n                            >\r\n                              Incluir\r\n                            </v-btn>\r\n                            <v-btn\r\n                              v-if=\"addSelectConsultants.length > 0\"\r\n                              depressed\r\n                              x-small\r\n                              color=\"error\"\r\n                              @click=\"removeSelectBox()\"\r\n                            >\r\n                              Excluir\r\n                            </v-btn>\r\n                          </div>\r\n                        </v-col>\r\n                        <v-col cols=\"5\" md=\"5\" class=\"pa-5\">\r\n                          <font color=\"black\">\r\n                              <select name=\"select2\" size=\"6\" style=\"width: 223px;\" class=\"border border-secondary\" multiple v-model=\"removeSelectConsultants\">\r\n                                  <option\r\n                                      v-for=\"(shape, i) in addSelectConsultants\"\r\n                                      :key=\"i\"\r\n                                      :value=\"shape.co_usuario\"\r\n                                      style=\"width: 223px;\">\r\n                                      {{ shape.no_usuario }}\r\n                                  </option>\r\n                                </select>\r\n                          </font>\r\n                        </v-col>\r\n                      </v-row>\r\n                    </td>\r\n                    <td>\r\n                      <div class=\"btn-group-vertical pa-5\">\r\n                            <v-btn\r\n                              depressed\r\n                              x-small\r\n                              color=\"primary\"\r\n                              class=\"mb-2\"\r\n                              @click=\"report()\"\r\n                            >\r\n                              Relat√≥rio\r\n                            </v-btn>\r\n                            <v-btn\r\n                              depressed\r\n                              x-small\r\n                              color=\"error\"\r\n                              class=\"mb-2\"\r\n                            >\r\n                              Gr√°fico\r\n                            </v-btn>\r\n                            <v-btn\r\n                              depressed\r\n                              x-small\r\n                              color=\"error\"\r\n                            >\r\n                              Pizza\r\n                            </v-btn>\r\n                        </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </template>\r\n            </v-simple-table>\r\n            <v-simple-table \r\n              class=\"pt-3\"\r\n              dense \r\n              v-for=\"(item, i) in listConsultants\"\r\n              :key=\"i\"\r\n              >\r\n            <template v-slot:default>\r\n              <thead class=\"border border-secondary\">\r\n                <tr>\r\n                  <th class=\"text-left\">\r\n                   {{ item[0].co_usuario}}\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th class=\"text-center border border-secondary\">\r\n                   Per√≠odo\r\n                  </th>\r\n                  <th class=\"text-center border border-secondary\">\r\n                   Ganancias Netas\r\n                  </th>\r\n                  <th class=\"text-center border border-secondary\">\r\n                   Costo Fijo\r\n                  </th>\r\n                  <th class=\"text-center border border-secondary\">\r\n                   Comisi√≥n\r\n                  </th>\r\n                  <th class=\"text-center border border-secondary\">\r\n                   Beneficio\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody\r\n              \r\n              >\r\n                <tr\r\n                v-for=\"(lis, i) in item\"\r\n                :key=\"i\"\r\n                class=\"border border-secondary\"\r\n                >\r\n                  <td class=\"border border-secondary\">{{ lis.month }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ lis.total_net_earnings}}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ lis.fixed_cost }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ lis.total_commission }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ lis.total_lucro }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"border border-secondary\">SALDO</td>\r\n                  <td class=\"border border-secondary\">R$ {{ finalOperation(item,'total_net_earnings') }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ finalOperation(item,'fixed_cost') }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ finalOperation(item,'total_commission') }}</td>\r\n                  <td class=\"border border-secondary\">R$ {{ finalOperation(item,'total_lucro',false) }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </template>\r\n          </v-simple-table>\r\n          </v-card> \r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'ConsultantsComponent',\r\n  data: () => ({\r\n    listConsultants : [],\r\n    selectConsultants: [],\r\n    addSelectConsultants: [],\r\n    removeSelectConsultants: []\r\n  }),\r\n  computed: {\r\n    ItemsConsultants() {\r\n      return this.$store.getters[\"consultant/GET_CONSULTANTS\"];\r\n    },\r\n  },\r\n  created () {\r\n    this.initialize()\r\n  },\r\n  methods: {\r\n    async initialize () {\r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/INDEX_CONSULTANTS\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    addSelectBox() {\r\n      for (let index = 0; index < this.selectConsultants.length; index++)\r\n      {\r\n        const position = this.ItemsConsultants.findIndex((element) => {\r\n          return element.co_usuario == this.selectConsultants[index];\r\n        });\r\n        if (position !== undefined)\r\n        {\r\n          this.addSelectConsultants.push(this.ItemsConsultants[position]);\r\n          // console.log(this.addSelectConsultants)\r\n          this.ItemsConsultants.splice(position, 1);\r\n        }\r\n      }\r\n    },\r\n    removeSelectBox() {\r\n      for (let index = 0; index < this.removeSelectConsultants.length; index++)\r\n      {\r\n        const position = this.addSelectConsultants.findIndex((element) => {\r\n          return element.co_usuario == this.removeSelectConsultants[index];\r\n        });\r\n        if (position !== undefined)\r\n        {\r\n          this.ItemsConsultants.push(this.addSelectConsultants[position]);\r\n          this.addSelectConsultants.splice(position, 1);\r\n          this.sortArray(this.ItemsConsultants)\r\n        }\r\n      }\r\n    },\r\n    sortArray(listConsultants) {\r\n      listConsultants.sort((a,b) => a.no_usuario < b.no_usuario ? -1 : +(a.no_usuario > b.no_usuario));\r\n    },\r\n    async report(){\r\n      const itemConsultants = this.addSelectConsultants.map((v) => {\r\n          return v.co_usuario\r\n      });\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_SHOW\", request);\r\n        const dataOp = response.data;\r\n        let newData = []\r\n        // var cars = [\r\n        //   { \r\n        //     make: 'audi',\r\n        //     model: 'r8',\r\n        //     year: '2012'\r\n        //   },\r\n        //   { \r\n        //     make: 'audi',\r\n        //     model: 'rs5',\r\n        //     year: '2013' \r\n        //   },\r\n        //   { \r\n        //     make: 'ford',\r\n        //     model: 'mustang',\r\n        //     year: '2012'\r\n        //   },\r\n        //   {\r\n        //     make: 'ford',\r\n        //     model: 'fusion',\r\n        //     year: '2015' \r\n        //   },\r\n        //   {\r\n        //     make: 'kia',\r\n        //     model: 'optima',\r\n        //     year: '2012'\r\n        //   }\r\n        // ];\r\n        const result = dataOp.reduce(function (r, a) {\r\n          r[a.co_usuario] = r[a.co_usuario] || [];\r\n          \r\n          r[a.co_usuario].push(a); \r\n          return r;\r\n        }, Object.create(null));\r\n\r\n        // console.log(result);\r\n\r\n\r\n        // let resultt = Object.assign(result['anapaula.chiodaro'],[{\r\n        //     make: 'kia',\r\n        //     model: 'optima',\r\n        //     year: '2012'\r\n        //   }]);\r\n        // let resultt = carss.reduce((h, a) => Object.assign(h, { [a.make]:( h[a.make] || [] ).concat(a) }), {})\r\n        // console.log(resultt)\r\n\r\n        this.listConsultants = result;\r\n        // for (const al of itemConsultants) {\r\n            \r\n        //   // for (let o of dataOp) {\r\n        //     for (let index = 0; index < dataOp.length; index++) {\r\n        //       newData.push(al: []);\r\n        //       // data.al.push({ id:i, preg:[] });\r\n        //       // data[data.length-1].preg.push( {pid: i, preg: \"Aqui pregunta\" });\r\n        //       newData[index].al=dataOp[index];\r\n        //       // console.log(dataOp[index])\r\n              \r\n        //     }\r\n            \r\n        //     // if(o.co_usuario == al){\r\n        //     //   newData[al] == [].push(o)\r\n        //     // }\r\n        // //     // console.log(o.co_usuario)\r\n              \r\n              \r\n        //   // }\r\n          \r\n        // }\r\n        // let data = dataOp.map(function(obj){\r\n          \r\n        //   // newData.push(obj)\r\n           \r\n        //   return newData;\r\n        // });\r\n        // console.log(newData)\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    finalOperation(params,key,type = true) {\r\n      if(!Array.isArray(params)){\r\n        return null;\r\n      }\r\n\r\n      let j = 1;\r\n      let total = params[0][key];\r\n\r\n      if(!total){\r\n        return 0;\r\n      }\r\n\r\n      while (j< params.length) {\r\n        if(type){\r\n          total += params[j][key];\r\n        }\r\n        else{\r\n          total -= params[j][key];\r\n        }\r\n        j++;\r\n      }\r\n\r\n      return Math.round(total,3,2);\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n// .mytable .v-table tbody tr:not(:last-child) {\r\n//     border-bottom: none;\r\n// }\r\n\r\n// .v-data-table .v-data-table__wrapper table tbody tr th/*, .v-data-table .v-data-table__wrapper table thead tr th, .v-data-table .v-data-table__wrapper table tfoot tr th*/ {\r\n// border: 1px solid;\r\n// }\r\ntbody {\r\n    tr:hover{\r\n      background-color: transparent !important;\r\n    }\r\n}\r\n// /*.v-data-table  .v-data-table__wrapper*/    th {\r\n//     // tr{\r\n//       border: black 1px solid !important;\r\n//     // }\r\n// }\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}