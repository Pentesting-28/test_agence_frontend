{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nimport { organizeByConsultants } from \"../assets/util/util\";\nimport { calculationsOfAmounts } from \"../assets/util/util\";\nexport default {\n  props: ['parentData'],\n  components: {\n    apexchart: VueApexCharts\n  },\n  data: () => ({\n    status: true,\n    loading: false,\n    series: [],\n    chartOptions: {\n      chart: {\n        width: 380,\n        type: 'pie'\n      },\n      labels: [],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: 'bottom'\n          }\n        }\n      }]\n    }\n  }),\n  watch: {\n    parentData() {\n      if (this.parentData.length > 0) {\n        this.initialize();\n      }\n    },\n\n    loading(val) {\n      if (!val) return;\n      setTimeout(() => this.loading = false, 10000);\n    }\n\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  mounted() {\n    organizeByConsultants;\n    calculationsOfAmounts;\n  },\n\n  methods: {\n    async initialize() {\n      this.loading = true;\n      const itemConsultants = this.parentData.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request); //response service\n\n        const dataConsultan = response.data;\n        const sizeData = dataConsultan.length;\n\n        if (sizeData > 0) {\n          const itemsSelect = this.parentData;\n          const dataOrganizeConsultant = organizeByConsultants(dataConsultan, itemsSelect);\n          let nameConsultan = [];\n          let sumConsultan = [];\n\n          for (let key in dataOrganizeConsultant) {\n            let suma = calculationsOfAmounts(dataOrganizeConsultant[key], 'total_net_earnings');\n            let total = parseInt(suma / dataOrganizeConsultant[key].length);\n            nameConsultan.push(dataOrganizeConsultant[key][0].name);\n            sumConsultan.push(total);\n          }\n\n          this.loading = false;\n          this.data.series = sumConsultan;\n          this.data.updateOptions.labels = nameConsultan;\n        } else {\n          this.$emit(\"resetComponentValue\", '');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    organizeByConsultants,\n    calculationsOfAmounts\n  }\n};","map":{"version":3,"mappings":"AA0BA;AAEA;AACA;AAEA;EACAA,qBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,YADA;IAEAC,cAFA;IAGAC,UAHA;IAIAC;MACAC;QACAC,UADA;QAEAC;MAFA,CADA;MAKAC,UALA;MAMAC;QACAC,eADA;QAEAC;UACAN;YACAC;UADA,CADA;UAIAM;YACAC;UADA;QAJA;MAFA;IANA;EAJA,EALA;EA4BAC;IACAC;MACA;QACA;MACA;IACA,CALA;;IAMAb;MACA;MACAc;IACA;;EATA,CA5BA;;EAuCAC;IACA;EACA,CAzCA;;EA0CAC;IACAC;IACAC;EACA,CA7CA;;EA8CAC;IACA;MAEA;MAEA;QACA;MACA,CAFA;MAIA;QACAC;MADA;;MAIA;QACA,2FADA,CACA;;QAEA;QACA;;QAEA;UACA;UACA;UAEA;UACA;;UAEA;YACA;YACA;YACAC;YACAC;UACA;;UACA;UACA;UACA;QACA,CAhBA,MAiBA;UACA;QACA;MACA,CA1BA,CA0BA;QACAC;MACA;IACA,CA1CA;;IA2CAN,qBA3CA;IA4CAC;EA5CA;AA9CA","names":["props","components","apexchart","data","status","loading","series","chartOptions","chart","width","type","labels","responsive","breakpoint","options","legend","position","watch","parentData","setTimeout","created","mounted","organizeByConsultants","calculationsOfAmounts","methods","item_consultants","nameConsultan","sumConsultan","console"],"sourceRoot":"src/components","sources":["GraphPizza.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card \r\n      outlined\r\n      class=\"my-4 mx-auto border border-secondary\"\r\n    >\r\n      <v-progress-linear\r\n        :active=\"loading\"\r\n        :indeterminate=\"loading\"\r\n        absolute\r\n        color=\"deep-purple accent-4\"\r\n      ></v-progress-linear>\r\n      <apexchart \r\n        type=\"pie\"\r\n        height=\"350\"\r\n        ref=\"radar\"\r\n        :options=\"chartOptions\" \r\n        :series=\"series\"\r\n        class=\"pt-3 mx-auto\"\r\n      >\r\n      </apexchart>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\n\r\nimport { organizeByConsultants } from \"../assets/util/util\"\r\nimport { calculationsOfAmounts } from \"../assets/util/util\"\r\n\r\nexport default {\r\n  props: ['parentData'],\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  data: () => ({\r\n    status: true,\r\n    loading: false,\r\n    series: [],\r\n    chartOptions: {\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n      },\r\n      labels: [],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          }\r\n        }\r\n      }]\r\n    },\r\n  }),\r\n  watch:{\r\n    parentData(){\r\n      if(this.parentData.length > 0) {\r\n        this.initialize();\r\n      }\r\n    },\r\n    loading (val) {\r\n      if (!val) return\r\n      setTimeout(() => (this.loading = false), 10000)\r\n    },\r\n  },\r\n  created() {\r\n    this.initialize();\r\n  },\r\n  mounted() {\r\n    organizeByConsultants;\r\n    calculationsOfAmounts;\r\n  },\r\n  methods: {\r\n    async initialize(){\r\n\r\n      this.loading = true;\r\n\r\n      const itemConsultants = this.parentData.map((v) => {\r\n        return v.co_usuario\r\n      });\r\n\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n      \r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request);//response service\r\n\r\n        const dataConsultan = response.data;\r\n        const sizeData = dataConsultan.length;\r\n\r\n        if(sizeData > 0){\r\n          const itemsSelect = this.parentData;\r\n          const dataOrganizeConsultant = organizeByConsultants(dataConsultan, itemsSelect);\r\n\r\n          let nameConsultan = [];\r\n          let sumConsultan = [];\r\n\r\n          for (let key in dataOrganizeConsultant){\r\n            let suma = calculationsOfAmounts(dataOrganizeConsultant[key],'total_net_earnings');\r\n            let total = parseInt(suma/dataOrganizeConsultant[key].length);\r\n            nameConsultan.push(dataOrganizeConsultant[key][0].name);\r\n            sumConsultan.push(total);\r\n          }\r\n          this.loading = false;\r\n          this.data.series = sumConsultan \r\n          this.data.updateOptions.labels = nameConsultan;\r\n        }\r\n        else{\r\n          this.$emit(\"resetComponentValue\", '');\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    organizeByConsultants,\r\n    calculationsOfAmounts\r\n  },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}