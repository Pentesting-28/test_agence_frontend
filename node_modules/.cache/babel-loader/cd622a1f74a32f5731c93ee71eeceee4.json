{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nimport moment from 'moment';\nimport 'moment/locale/es';\nexport default {\n  components: {\n    apexchart: VueApexCharts\n  },\n  props: ['parentData'],\n  data: () => ({\n    dataGraph: [],\n    listMonth: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n    chartOptions: {\n      chart: {\n        type: 'bar',\n        height: 350\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '55%',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: moment.months()\n      },\n      yaxis: {\n        title: {\n          text: '$( Ganancias )'\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val;\n            /*+ \"thousands\"*/\n          }\n        }\n      }\n    }\n  }),\n  watch: {\n    parentData() {\n      if (this.parentData.length > 0) {\n        this.netEarnings();\n      } else {\n        this.listConsultants = [];\n      }\n    }\n\n  },\n\n  created() {\n    this.netEarnings();\n  },\n\n  methods: {\n    async netEarnings() {\n      const itemConsultants = this.parentData.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request); //response service\n\n        const dataConsultan = response.data;\n        const listSelect = this.parentData;\n        const dataOrganizeConsultant = dataConsultan.reduce(function (acumulador, valorActual) {\n          const name = listSelect.find(consultant => {\n            return consultant.co_usuario === valorActual.co_usuario;\n          });\n          let valorActualAssignName = Object.assign({\n            name: name.no_usuario\n          }, valorActual);\n          acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || [];\n          acumulador[valorActual.co_usuario].push(valorActualAssignName);\n          return acumulador;\n        }, Object.create(null)); // console.log(dataOrganizeConsultant);\n\n        for (let clave in dataOrganizeConsultant) {\n          let dataPrepare = {\n            name: dataOrganizeConsultant[clave][0].name,\n            data: dataOrganizeConsultant[clave].map(index => {\n              return this.numFormat(index.total_net_earnings);\n            })\n          };\n          this.dataGraph.push(dataPrepare);\n          dataOrganizeConsultant[clave].map(index => {\n            // return this.numFormat(index.total_net_earnings)\n            for (const key of moment.months()) {\n              console.log(key);\n\n              if (key == moment(index.month).format('MMMM')) {\n                return this.numFormat(index.total_net_earnings);\n              } else {\n                return [];\n              }\n            }\n          });\n        } // console.log(\n        //   this.dataGraph,\n        //   // this.listMonth,\n        //   moment.months()\n        // )\n\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    numFormat(item) {\n      return new Intl.NumberFormat('de-DE').format(item.toFixed(2));\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuBA;AACA;AACA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,qBAJA;EAKAC;IACAC,aADA;IAEAC,YACA,OADA,EAEA,SAFA,EAGA,OAHA,EAIA,OAJA,EAKA,MALA,EAMA,OANA,EAOA,OAPA,EAQA,QARA,EASA,YATA,EAUA,SAVA,EAWA,WAXA,EAYA,WAZA,CAFA;IAgBAC;MACAC;QACAC,WADA;QAEAC;MAFA,CADA;MAKAC;QACAC;UACAC,iBADA;UAEAC,kBAFA;UAGAC;QAHA;MADA,CALA;MAYAC;QACAC;MADA,CAZA;MAeAC;QACAC,UADA;QAEAC,QAFA;QAGAC;MAHA,CAfA;MAoBAC;QACAC;MADA,CApBA;MAuBAC;QACAC;UACAC;QADA;MADA,CAvBA;MA4BAC;QACAC;MADA,CA5BA;MA+BAC;QACAC;UACAC;YACA;YAAA;UACA;QAHA;MADA;IA/BA;EAhBA,EALA;EA6DAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA;;EARA,CA7DA;;EAuEAC;IACA;EACA,CAzEA;;EA0EAC;IACA;MACA;QACA;MACA,CAFA;MAGA;QACAC;MADA;;MAGA;QACA,2FADA,CACA;;QAEA;QAEA;QAEA;UACA;YACA;UACA,CAFA;UAGA;YAAAC;UAAA;UACAC;UACAA;UACA;QACA,CARA,EAQAC,mBARA,EAPA,CAgBA;;QACA,0CACA;UAEA;YACAF,2CADA;YAEAjC;cAAA;YAAA;UAFA;UAIA;UAGAoC;YACA;YACA;cACAC;;cACA;gBACA;cACA,CAFA,MAGA;gBACA;cACA;YACA;UACA,CAXA;QAaA,CAxCA,CAyCA;QACA;QACA;QACA;QACA;;MACA,CA9CA,CA8CA;QACAA;MACA;IACA,CAzDA;;IA0DAC;MACA;IACA;;EA5DA;AA1EA","names":["components","apexchart","props","data","dataGraph","listMonth","chartOptions","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","watch","parentData","created","methods","item_consultants","name","acumulador","Object","dataOrganizeConsultant","console","numFormat"],"sourceRoot":"src/components","sources":["GraphBar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- <v-card\r\n        elevation=\"6\"\r\n        loading\r\n        outlined\r\n        max-width=\"900\"\r\n        class=\"pt-3 mx-auto\"\r\n      > -->\r\n        <apexchart \r\n          type=\"bar\"\r\n          height=\"350\" \r\n          :options=\"chartOptions\" \r\n          :series=\"dataGraph\"\r\n          class=\"pt-3 mx-auto\"\r\n        >\r\n        </apexchart>\r\n      <!-- </v-card> -->\r\n    \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nexport default {\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  props: ['parentData'],\r\n  data: () => ({\r\n    dataGraph : [],\r\n    listMonth: [\r\n      'enero',\r\n      'febrero',\r\n      'marzo',\r\n      'abril',\r\n      'mayo',\r\n      'junio',\r\n      'julio',\r\n      'agosto',\r\n      'septiembre',\r\n      'octubre',\r\n      'noviembre',\r\n      'diciembre'\r\n    ],\r\n    chartOptions: {\r\n      chart: {\r\n        type: 'bar',\r\n        height: 350\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '55%',\r\n          endingShape: 'rounded'\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: moment.months(),\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: '$( Ganancias )'\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \"$ \" + val /*+ \"thousands\"*/\r\n          }\r\n        }\r\n      }\r\n    }, \r\n }),\r\n watch:{\r\n  parentData(){\r\n    if(this.parentData.length > 0) {\r\n      this.netEarnings()\r\n    }\r\n    else{\r\n      this.listConsultants = []\r\n    }\r\n  }\r\n},\r\ncreated() {\r\n  this.netEarnings()\r\n},\r\n methods: {\r\n  async netEarnings(){\r\n      const itemConsultants = this.parentData.map((v) => {\r\n          return v.co_usuario\r\n      });\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_NET_EARNINGS\", request);//response service\r\n        \r\n        const dataConsultan = response.data;\r\n\r\n        const listSelect = this.parentData\r\n\r\n        const dataOrganizeConsultant = dataConsultan.reduce(function (acumulador, valorActual){\r\n          const name = listSelect.find((consultant) => { \r\n            return consultant.co_usuario === valorActual.co_usuario\r\n          });\r\n          let valorActualAssignName = Object.assign({name:name.no_usuario}, valorActual)\r\n          acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || []\r\n          acumulador[valorActual.co_usuario].push(valorActualAssignName); \r\n          return acumulador;\r\n        }, Object.create(null));\r\n        // console.log(dataOrganizeConsultant);\r\n        for (let clave in dataOrganizeConsultant)\r\n        {\r\n          \r\n          let dataPrepare = {\r\n            name: dataOrganizeConsultant[clave][0].name,\r\n            data: dataOrganizeConsultant[clave].map((index) => {return this.numFormat(index.total_net_earnings)})\r\n          }\r\n          this.dataGraph.push(dataPrepare)\r\n\r\n          \r\n            dataOrganizeConsultant[clave].map((index) => {\r\n              // return this.numFormat(index.total_net_earnings)\r\n              for (const key of moment.months()) {\r\n               console.log(key)\r\n               if(key == moment(index.month).format('MMMM')){\r\n                return this.numFormat(index.total_net_earnings)\r\n               }\r\n               else{\r\n                return []\r\n               }\r\n              }\r\n            })\r\n          \r\n        }\r\n        // console.log(\r\n        //   this.dataGraph,\r\n        //   // this.listMonth,\r\n        //   moment.months()\r\n        // )\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    numFormat(item) {\r\n      return new Intl.NumberFormat('de-DE').format(item.toFixed(2));\r\n    },\r\n },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\ntspan{\r\n    text-transform: capitalize !important;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}