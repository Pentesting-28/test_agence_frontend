{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\";\nimport \"../../../src/components/VOtpInput/VOtpInput.sass\"; // Extensions\n\nimport VInput from '../VInput';\nimport VTextField from '../VTextField/VTextField'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nimport { breaking } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VInput);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-otp-input',\n  directives: {\n    ripple\n  },\n  inheritAttrs: false,\n  props: {\n    length: {\n      type: [Number, String],\n      default: 6\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    plain: Boolean\n  },\n  data: () => ({\n    initialValue: null,\n    isBooted: false,\n    otp: []\n  }),\n  computed: {\n    outlined() {\n      return !this.plain;\n    },\n\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        ...VTextField.options.computed.classes.call(this),\n        'v-otp-input--plain': this.plain\n      };\n    }\n\n  },\n  watch: {\n    isFocused: 'updateValue',\n\n    value(val) {\n      this.lazyValue = val;\n      this.otp = (val == null ? void 0 : val.split('')) || [];\n    }\n\n  },\n\n  created() {\n    var _this$internalValue;\n    /* istanbul ignore next */\n\n\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this);\n    }\n\n    this.otp = ((_this$internalValue = this.internalValue) == null ? void 0 : _this$internalValue.split('')) || [];\n  },\n\n  mounted() {\n    requestAnimationFrame(() => this.isBooted = true);\n  },\n\n  methods: {\n    /** @public */\n    focus(e, otpIdx) {\n      this.onFocus(e, otpIdx || 0);\n    },\n\n    genInputSlot(otpIdx) {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: {\n          height: convertToUnit(this.height)\n        },\n        on: {\n          click: () => this.onClick(otpIdx),\n          mousedown: e => this.onMouseDown(e, otpIdx),\n          mouseup: e => this.onMouseUp(e, otpIdx)\n        }\n      }), [this.genDefaultSlot(otpIdx)]);\n    },\n\n    genControl(otpIdx) {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control'\n      }, [this.genInputSlot(otpIdx)]);\n    },\n\n    genDefaultSlot(otpIdx) {\n      return [this.genFieldset(), this.genTextFieldSlot(otpIdx)];\n    },\n\n    genContent() {\n      return Array.from({\n        length: +this.length\n      }, (_, i) => {\n        return this.$createElement('div', this.setTextColor(this.validationState, {\n          staticClass: 'v-input',\n          class: this.classes\n        }), [this.genControl(i)]);\n      });\n    },\n\n    genFieldset() {\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true\n        }\n      }, [this.genLegend()]);\n    },\n\n    genLegend() {\n      const span = this.$createElement('span', {\n        domProps: {\n          innerHTML: '&#8203;'\n        }\n      });\n      return this.$createElement('legend', {\n        style: {\n          width: '0px'\n        }\n      }, [span]);\n    },\n\n    genInput(otpIdx) {\n      const listeners = Object.assign({}, this.listeners$);\n      delete listeners.change; // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.otp[otpIdx],\n          min: this.type === 'number' ? 0 : null\n        },\n        attrs: { ...this.attrs$,\n          autocomplete: 'one-time-code',\n          disabled: this.isDisabled,\n          readonly: this.isReadonly,\n          type: this.type,\n          id: `${this.computedId}--${otpIdx}`,\n          class: `otp-field-box--${otpIdx}`\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: e => this.onInput(e, otpIdx),\n          focus: e => this.onFocus(e, otpIdx),\n          keydown: this.onKeyDown,\n          keyup: e => this.onKeyUp(e, otpIdx)\n        }),\n        ref: 'input',\n        refInFor: true\n      });\n    },\n\n    genTextFieldSlot(otpIdx) {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genInput(otpIdx)]);\n    },\n\n    onBlur(e) {\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick(otpIdx) {\n      if (this.isFocused || this.isDisabled || !this.$refs.input[otpIdx]) return;\n      this.onFocus(undefined, otpIdx);\n    },\n\n    onFocus(e, otpIdx) {\n      e == null ? void 0 : e.preventDefault();\n      e == null ? void 0 : e.stopPropagation();\n      const elements = this.$refs.input;\n      const ref = this.$refs.input && elements[otpIdx || 0];\n      if (!ref) return;\n\n      if (document.activeElement !== ref) {\n        ref.focus();\n        return ref.select();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        ref.select();\n        e && this.$emit('focus', e);\n      }\n    },\n\n    onInput(e, index) {\n      const maxCursor = +this.length - 1;\n      const target = e.target;\n      const value = target.value;\n      const inputDataArray = (value == null ? void 0 : value.split('')) || [];\n      const newOtp = [...this.otp];\n\n      for (let i = 0; i < inputDataArray.length; i++) {\n        const appIdx = index + i;\n        if (appIdx > maxCursor) break;\n        newOtp[appIdx] = inputDataArray[i].toString();\n      }\n\n      if (!inputDataArray.length) {\n        newOtp.splice(index, 1);\n      }\n\n      this.otp = newOtp;\n      this.internalValue = this.otp.join('');\n\n      if (index + inputDataArray.length >= +this.length) {\n        this.onCompleted();\n        this.clearFocus(index);\n      } else if (inputDataArray.length) {\n        this.changeFocus(index + inputDataArray.length);\n      }\n    },\n\n    clearFocus(index) {\n      const input = this.$refs.input[index];\n      input.blur();\n    },\n\n    onKeyDown(e) {\n      if (e.keyCode === keyCodes.enter) {\n        this.$emit('change', this.internalValue);\n      }\n\n      this.$emit('keydown', e);\n    },\n\n    onMouseDown(e, otpIdx) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input[otpIdx]) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e);\n    },\n\n    onMouseUp(e, otpIdx) {\n      if (this.hasMouseDown) this.focus(e, otpIdx);\n      VInput.options.methods.onMouseUp.call(this, e);\n    },\n\n    changeFocus(index) {\n      this.onFocus(undefined, index || 0);\n    },\n\n    updateValue(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    },\n\n    onKeyUp(event, index) {\n      event.preventDefault();\n      const eventKey = event.key;\n\n      if (['Tab', 'Shift', 'Meta', 'Control', 'Alt'].includes(eventKey)) {\n        return;\n      }\n\n      if (['Delete'].includes(eventKey)) {\n        return;\n      }\n\n      if (eventKey === 'ArrowLeft' || eventKey === 'Backspace' && !this.otp[index]) {\n        return index > 0 && this.changeFocus(index - 1);\n      }\n\n      if (eventKey === 'ArrowRight') {\n        return index + 1 < +this.length && this.changeFocus(index + 1);\n      }\n    },\n\n    onCompleted() {\n      const rsp = this.otp.join('');\n\n      if (rsp.length === +this.length) {\n        this.$emit('finish', rsp);\n      }\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-otp-input',\n      class: this.themeClasses\n    }, this.genContent());\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VInput","VTextField","ripple","convertToUnit","keyCodes","breaking","mixins","baseMixins","extend","name","directives","inheritAttrs","props","length","type","Number","String","default","plain","Boolean","data","initialValue","isBooted","otp","computed","outlined","classes","options","call","watch","isFocused","value","val","lazyValue","split","created","$attrs","hasOwnProperty","internalValue","mounted","requestAnimationFrame","methods","focus","e","otpIdx","onFocus","genInputSlot","$createElement","setBackgroundColor","backgroundColor","staticClass","style","height","on","click","onClick","mousedown","onMouseDown","mouseup","onMouseUp","genDefaultSlot","genControl","genFieldset","genTextFieldSlot","genContent","Array","from","_","i","setTextColor","validationState","class","attrs","genLegend","span","domProps","innerHTML","width","genInput","listeners","Object","assign","listeners$","change","min","attrs$","autocomplete","disabled","isDisabled","readonly","isReadonly","id","computedId","blur","onBlur","input","onInput","keydown","onKeyDown","keyup","onKeyUp","ref","refInFor","$nextTick","$emit","$refs","undefined","preventDefault","stopPropagation","elements","document","activeElement","select","index","maxCursor","target","inputDataArray","newOtp","appIdx","toString","splice","join","onCompleted","clearFocus","changeFocus","keyCode","enter","hasMouseDown","updateValue","hasColor","event","eventKey","key","includes","rsp","render","h","themeClasses"],"sourceRoot":"","sources":["../../../src/components/VOtpInput/VOtpInput.ts"],"sourcesContent":["// Styles\nimport '../VTextField/VTextField.sass'\nimport './VOtpInput.sass'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VInput,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    input: HTMLInputElement[]\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-otp-input',\n\n  directives: {\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    length: {\n      type: [Number, String],\n      default: 6,\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    plain: Boolean,\n  },\n\n  data: () => ({\n    initialValue: null,\n    isBooted: false,\n    otp: [] as string[],\n  }),\n\n  computed: {\n    outlined (): Boolean {\n      return !this.plain\n    },\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        ...VTextField.options.computed.classes.call(this),\n        'v-otp-input--plain': this.plain,\n      }\n    },\n  },\n\n  watch: {\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n      this.otp = val?.split('') || []\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    this.otp = this.internalValue?.split('') || []\n  },\n\n  mounted () {\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus (e: Event, otpIdx: number) {\n      this.onFocus(e, otpIdx || 0)\n    },\n    genInputSlot (otpIdx: number) {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: () => this.onClick(otpIdx),\n          mousedown: (e: Event) => this.onMouseDown(e, otpIdx),\n          mouseup: (e: Event) => this.onMouseUp(e, otpIdx),\n        },\n      }), [this.genDefaultSlot(otpIdx)])\n    },\n    genControl (otpIdx: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n      }, [\n        this.genInputSlot(otpIdx),\n      ])\n    },\n    genDefaultSlot (otpIdx: number) {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(otpIdx),\n      ]\n    },\n    genContent () {\n      return Array.from({ length: +this.length }, (_, i) => {\n        return this.$createElement('div', this.setTextColor(this.validationState, {\n          staticClass: 'v-input',\n          class: this.classes,\n        }), [this.genControl(i)])\n      })\n    },\n    genFieldset () {\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLegend () {\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: '0px',\n        },\n      }, [span])\n    },\n    genInput (otpIdx: number) {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.otp[otpIdx],\n          min: this.type === 'number' ? 0 : null,\n        },\n        attrs: {\n          ...this.attrs$,\n          autocomplete: 'one-time-code',\n          disabled: this.isDisabled,\n          readonly: this.isReadonly,\n          type: this.type,\n          id: `${this.computedId}--${otpIdx}`,\n          class: `otp-field-box--${otpIdx}`,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: (e: Event) => this.onInput(e, otpIdx),\n          focus: (e: Event) => this.onFocus(e, otpIdx),\n          keydown: this.onKeyDown,\n          keyup: (e: KeyboardEvent) => this.onKeyUp(e, otpIdx),\n        }),\n        ref: 'input',\n        refInFor: true,\n      })\n    },\n    genTextFieldSlot (otpIdx: number): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genInput(otpIdx),\n      ])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick (otpIdx: number) {\n      if (this.isFocused || this.isDisabled || !this.$refs.input[otpIdx]) return\n\n      this.onFocus(undefined, otpIdx)\n    },\n    onFocus (e?: Event, otpIdx?: number) {\n      e?.preventDefault()\n      e?.stopPropagation()\n      const elements = this.$refs.input as HTMLInputElement[]\n      const ref = this.$refs.input && elements[otpIdx || 0]\n      if (!ref) return\n\n      if (document.activeElement !== ref) {\n        ref.focus()\n        return ref.select()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        ref.select()\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event, index: number) {\n      const maxCursor = +this.length - 1\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n      const inputDataArray = value?.split('') || []\n\n      const newOtp: string[] = [...this.otp]\n      for (let i = 0; i < inputDataArray.length; i++) {\n        const appIdx = index + i\n        if (appIdx > maxCursor) break\n        newOtp[appIdx] = inputDataArray[i].toString()\n      }\n      if (!inputDataArray.length) {\n        newOtp.splice(index, 1)\n      }\n\n      this.otp = newOtp\n      this.internalValue = this.otp.join('')\n\n      if (index + inputDataArray.length >= +this.length) {\n        this.onCompleted()\n        this.clearFocus(index)\n      } else if (inputDataArray.length) {\n        this.changeFocus(index + inputDataArray.length)\n      }\n    },\n    clearFocus (index: number) {\n      const input = this.$refs.input[index] as HTMLInputElement\n      input.blur()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) {\n        this.$emit('change', this.internalValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event, otpIdx: number) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input[otpIdx]) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event, otpIdx: number) {\n      if (this.hasMouseDown) this.focus(e, otpIdx)\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    changeFocus (index: number) {\n      this.onFocus(undefined, index || 0)\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onKeyUp (event: KeyboardEvent, index: number) {\n      event.preventDefault()\n      const eventKey = event.key\n      if (['Tab', 'Shift', 'Meta', 'Control', 'Alt'].includes(eventKey)) {\n        return\n      }\n      if (['Delete'].includes(eventKey)) {\n        return\n      }\n      if (eventKey === 'ArrowLeft' || (eventKey === 'Backspace' && !this.otp[index])) {\n        return index > 0 && this.changeFocus(index - 1)\n      }\n      if (eventKey === 'ArrowRight') {\n        return index + 1 < +this.length && this.changeFocus(index + 1)\n      }\n    },\n    onCompleted () {\n      const rsp = this.otp.join('')\n      if (rsp.length === +this.length) {\n        this.$emit('finish', rsp)\n      }\n    },\n  },\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-otp-input',\n      class: this.themeClasses,\n    }, this.genContent())\n  },\n})\n"]},"metadata":{},"sourceType":"module"}