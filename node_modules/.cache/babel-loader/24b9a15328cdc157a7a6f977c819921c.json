{"ast":null,"code":"import Api from '../../../Services/index';\nexport const consultant = {\n  namespaced: true,\n  state: {\n    consultants: []\n  },\n  getters: {\n    GET_OFFICES(state) {\n      return state.offices;\n    }\n\n  },\n  mutations: {// SET_OFFICES(state, payload) {\n    //     state.offices = payload.data;\n    // },\n    // SET_PUSH_OFFICES(state, payload) {\n    //     state.offices.push(payload);\n    // },\n    // SET_UPDATE_OFFICES(state, payload) {\n    //     state.offices.splice(payload.position_array, 1, payload.data);\n    //     // state.users = Object.assign({}, item)\n    // },\n    // SET_DELETE_OFFICES(state, payload) {\n    //     const position = state.offices.findIndex((element) => {\n    //         return element.id == payload.id\n    //     })\n    //     if (position !== undefined) {\n    //         state.offices.splice(position, 1);\n    //     }\n    // },\n  },\n  actions: {// async INDEX_OFFICES({ commit }) {\n    //     try {\n    //         const response = await Api.get(`/api/v1/offices`);\n    //         console.log(response, 'oficinas index')\n    //         commit(\"SET_OFFICES\", response.data);\n    //         return response.data;\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // },\n    // async OFFICE_STORE({ commit }, payload) {\n    //     try {\n    //         const response = await Api.post('/api/v1/offices', payload);\n    //         commit(\"SET_PUSH_OFFICES\", response.data.data);\n    //         return response.data;\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // },\n    // async OFFICE_UPDATE({ commit }, payload) {\n    //     try {\n    //         const response = await Api.put(`/api/v1/offices/${payload.id}`, payload);\n    //         const data = {\n    //             data: response.data.data,\n    //             position_array: payload.position_array\n    //         }\n    //         commit(\"SET_UPDATE_OFFICES\", data);\n    //         return response;\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // },\n    // async OFFICE_DELETE({ commit }, payload) {\n    //     try {\n    //         const response = await Api.delete(`/api/v1/offices/${payload.id}`);\n    //         commit(\"SET_DELETE_OFFICES\", payload);\n    //         return response.data;\n    //     } catch (error) {\n    //         return Promise.reject(error);\n    //     }\n    // }\n  }\n};","map":{"version":3,"names":["Api","consultant","namespaced","state","consultants","getters","GET_OFFICES","offices","mutations","actions"],"sources":["C:/laragon/www/proyectos/Laravel/Mario/test_agence_frontend/src/store/modules/consultant/consultant.js"],"sourcesContent":["import Api from '../../../Services/index';\r\n\r\nexport const consultant = {\r\n    namespaced: true,\r\n    state: {\r\n        consultants: [],\r\n    },\r\n    getters: {\r\n        GET_OFFICES(state) {\r\n            return state.offices;\r\n\r\n        }\r\n    },\r\n    mutations: {\r\n        // SET_OFFICES(state, payload) {\r\n        //     state.offices = payload.data;\r\n        // },\r\n        // SET_PUSH_OFFICES(state, payload) {\r\n        //     state.offices.push(payload);\r\n        // },\r\n        // SET_UPDATE_OFFICES(state, payload) {\r\n        //     state.offices.splice(payload.position_array, 1, payload.data);\r\n        //     // state.users = Object.assign({}, item)\r\n        // },\r\n        // SET_DELETE_OFFICES(state, payload) {\r\n        //     const position = state.offices.findIndex((element) => {\r\n        //         return element.id == payload.id\r\n        //     })\r\n\r\n        //     if (position !== undefined) {\r\n        //         state.offices.splice(position, 1);\r\n        //     }\r\n        // },\r\n    },\r\n    actions: {\r\n        // async INDEX_OFFICES({ commit }) {\r\n        //     try {\r\n        //         const response = await Api.get(`/api/v1/offices`);\r\n        //         console.log(response, 'oficinas index')\r\n        //         commit(\"SET_OFFICES\", response.data);\r\n        //         return response.data;\r\n        //     } catch (error) {\r\n        //         return Promise.reject(error);\r\n        //     }\r\n        // },\r\n        // async OFFICE_STORE({ commit }, payload) {\r\n        //     try {\r\n        //         const response = await Api.post('/api/v1/offices', payload);\r\n        //         commit(\"SET_PUSH_OFFICES\", response.data.data);\r\n        //         return response.data;\r\n        //     } catch (error) {\r\n        //         return Promise.reject(error);\r\n        //     }\r\n        // },\r\n        // async OFFICE_UPDATE({ commit }, payload) {\r\n        //     try {\r\n        //         const response = await Api.put(`/api/v1/offices/${payload.id}`, payload);\r\n        //         const data = {\r\n        //             data: response.data.data,\r\n        //             position_array: payload.position_array\r\n        //         }\r\n        //         commit(\"SET_UPDATE_OFFICES\", data);\r\n        //         return response;\r\n        //     } catch (error) {\r\n        //         return Promise.reject(error);\r\n        //     }\r\n        // },\r\n        // async OFFICE_DELETE({ commit }, payload) {\r\n        //     try {\r\n        //         const response = await Api.delete(`/api/v1/offices/${payload.id}`);\r\n        //         commit(\"SET_DELETE_OFFICES\", payload);\r\n        //         return response.data;\r\n        //     } catch (error) {\r\n        //         return Promise.reject(error);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,EAAE,IADU;EAEtBC,KAAK,EAAE;IACHC,WAAW,EAAE;EADV,CAFe;EAKtBC,OAAO,EAAE;IACLC,WAAW,CAACH,KAAD,EAAQ;MACf,OAAOA,KAAK,CAACI,OAAb;IAEH;;EAJI,CALa;EAWtBC,SAAS,EAAE,CACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;EAnBO,CAXW;EAgCtBC,OAAO,EAAE,CACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAzCK;AAhCa,CAAnB"},"metadata":{},"sourceType":"module"}