{"ast":null,"code":"import Api from '../../../Services/index';\nexport const consultant = {\n  namespaced: true,\n  state: {\n    consultants: [],\n    showConsultants: [],\n    netEarningsConsultants: []\n  },\n  getters: {\n    GET_CONSULTANTS(state) {\n      return state.consultants;\n    }\n\n  },\n  mutations: {\n    SET_CONSULTANTS(state, payload) {\n      state.consultants = payload.data;\n    },\n\n    SET_CONSULTANTS_SHOW(state, payload) {\n      state.showConsultants = payload.data;\n    },\n\n    SET_CONSULTANTS_NET_EARNINGS(state, payload) {\n      state.netEarningsConsultants = payload.data;\n    }\n\n  },\n  actions: {\n    async INDEX_CONSULTANTS({\n      commit\n    }) {\n      try {\n        const response = await Api.get(`/api/v1/consultant`);\n        console.log(response, 'consultant index');\n        commit(\"SET_CONSULTANTS\", response.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_SHOW({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant', payload);\n        commit(\"SET_CONSULTANTS_SHOW\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_NET_EARNINGS({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant/net_earnings', payload);\n        commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"names":["Api","consultant","namespaced","state","consultants","showConsultants","netEarningsConsultants","getters","GET_CONSULTANTS","mutations","SET_CONSULTANTS","payload","data","SET_CONSULTANTS_SHOW","SET_CONSULTANTS_NET_EARNINGS","actions","INDEX_CONSULTANTS","commit","response","get","console","log","error","Promise","reject","CONSULTANT_SHOW","post","CONSULTANT_NET_EARNINGS"],"sources":["C:/laragon/www/proyectos/Laravel/Mario/test_agence_frontend/src/store/modules/consultant/consultant.js"],"sourcesContent":["import Api from '../../../Services/index';\r\n\r\nexport const consultant = {\r\n    namespaced: true,\r\n    state: {\r\n        consultants: [],\r\n        showConsultants: [],\r\n        netEarningsConsultants: []\r\n    },\r\n    getters: {\r\n        GET_CONSULTANTS(state) {\r\n            return state.consultants;\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_CONSULTANTS(state, payload) {\r\n            state.consultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_SHOW(state, payload) {\r\n            state.showConsultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_NET_EARNINGS(state, payload) {\r\n            state.netEarningsConsultants = payload.data;\r\n        },\r\n    },\r\n    actions: {\r\n        async INDEX_CONSULTANTS({ commit }) {\r\n            try {\r\n                const response = await Api.get(`/api/v1/consultant`);\r\n                console.log(response, 'consultant index')\r\n                commit(\"SET_CONSULTANTS\", response.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_SHOW({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant', payload);\r\n                commit(\"SET_CONSULTANTS_SHOW\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_NET_EARNINGS({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant/net_earnings', payload);\r\n                commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,EAAE,IADU;EAEtBC,KAAK,EAAE;IACHC,WAAW,EAAE,EADV;IAEHC,eAAe,EAAE,EAFd;IAGHC,sBAAsB,EAAE;EAHrB,CAFe;EAOtBC,OAAO,EAAE;IACLC,eAAe,CAACL,KAAD,EAAQ;MACnB,OAAOA,KAAK,CAACC,WAAb;IACH;;EAHI,CAPa;EAYtBK,SAAS,EAAE;IACPC,eAAe,CAACP,KAAD,EAAQQ,OAAR,EAAiB;MAC5BR,KAAK,CAACC,WAAN,GAAoBO,OAAO,CAACC,IAA5B;IACH,CAHM;;IAIPC,oBAAoB,CAACV,KAAD,EAAQQ,OAAR,EAAiB;MACjCR,KAAK,CAACE,eAAN,GAAwBM,OAAO,CAACC,IAAhC;IACH,CANM;;IAOPE,4BAA4B,CAACX,KAAD,EAAQQ,OAAR,EAAiB;MACzCR,KAAK,CAACG,sBAAN,GAA+BK,OAAO,CAACC,IAAvC;IACH;;EATM,CAZW;EAuBtBG,OAAO,EAAE;IACL,MAAMC,iBAAN,CAAwB;MAAEC;IAAF,CAAxB,EAAoC;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAJ,CAAS,oBAAT,CAAvB;QACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,kBAAtB;QACAD,MAAM,CAAC,iBAAD,EAAoBC,QAAQ,CAACN,IAA7B,CAAN;QACA,OAAOM,QAAQ,CAACN,IAAhB;MACH,CALD,CAKE,OAAOU,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ,CAVI;;IAWL,MAAMG,eAAN,CAAsB;MAAER;IAAF,CAAtB,EAAkCN,OAAlC,EAA2C;MACvC,IAAI;QACA,MAAMO,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAJ,CAAS,oBAAT,EAA+Bf,OAA/B,CAAvB;QACAM,MAAM,CAAC,sBAAD,EAAyBC,QAAQ,CAACN,IAAT,CAAcA,IAAvC,CAAN;QACA,OAAOM,QAAQ,CAACN,IAAhB;MACH,CAJD,CAIE,OAAOU,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ,CAnBI;;IAoBL,MAAMK,uBAAN,CAA8B;MAAEV;IAAF,CAA9B,EAA0CN,OAA1C,EAAmD;MAC/C,IAAI;QACA,MAAMO,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAJ,CAAS,iCAAT,EAA4Cf,OAA5C,CAAvB;QACAM,MAAM,CAAC,8BAAD,EAAiCC,QAAQ,CAACN,IAAT,CAAcA,IAA/C,CAAN;QACA,OAAOM,QAAQ,CAACN,IAAhB;MACH,CAJD,CAIE,OAAOU,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ;;EA5BI;AAvBa,CAAnB"},"metadata":{},"sourceType":"module"}