{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Api from '../../../Services/index';\nexport const consultant = {\n  namespaced: true,\n  state: {\n    consultants: [],\n    showConsultants: [],\n    netEarningsConsultants: [],\n    netEarningsFixedCostConsultants: []\n  },\n  getters: {\n    GET_CONSULTANTS(state) {\n      return state.consultants;\n    }\n\n  },\n  mutations: {\n    SET_CONSULTANTS(state, payload) {\n      state.consultants = payload.data;\n    },\n\n    SET_CONSULTANTS_SHOW(state, payload) {\n      state.showConsultants = payload.data;\n    },\n\n    SET_CONSULTANTS_NET_EARNINGS(state, payload) {\n      state.netEarningsConsultants = payload.data;\n    },\n\n    SET_CONSULTANTS_NET_EARNINGS_FIXED_COST(state, payload) {\n      state.netEarningsFixedCostConsultants = payload.data;\n    }\n\n  },\n  actions: {\n    async INDEX_CONSULTANTS({\n      commit\n    }) {\n      try {\n        // const response = await Api.get(`/api/v1/consultant`);\n        // console.log(response, 'consultant index')\n        // commit(\"SET_CONSULTANTS\", response.data);\n        // return response;\n        // const headers = {\n        //     Accept: \"application/json\",\n        //     \"Content-Type\": \"application/json\",\n        //     \"X-localization\": \"es\"\n        // }\n        const response = await fetch(\"https://consultanttestagence.000webhostapp.com/api/v1/consultant\"); // .then(response => response.json())\n        // .then(data => (commit(\"SET_CONSULTANTS\", data)));\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(data);\n        commit(\"SET_CONSULTANTS\", data);\n        return data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_SHOW({\n      commit\n    }, payload) {\n      try {\n        const url = `https://consultanttestagence.000webhostapp.com/api/v1/consultant/`;\n        const configHeaders = {\n          // 'Content-Type':'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, GET, OPTIONS' // 'Access-Control-Allow-Headers': 'X-PINGOTHER, Content-Type',\n          // 'Access-Control-Max-Age': 86400\n          // \"Content-Type\": \"text/plain\"\n\n        }; // Ejemplo implementando el metodo POST:\n\n        postData(`https://consultanttestagence.000webhostapp.com/api/v1/consultant/`, payload).then(data => {\n          console.log(data); // JSON data parsed by `data.json()` call\n        }); // const response = await fetch(url, {\n        //     method: 'POST',\n        //     headers: {\n        //         \"Access-Control-Allow-Headers\" : \"Content-Type\",\n        //         // \"Access-Control-Allow-Origin\": \"*\",\n        //         \"Access-Control-Allow-Methods\": \"POST\"\n        //     },\n        //     body: JSON.stringify(payload)\n        // } );\n        // if (!response.ok) {\n        //     throw new Error(`HTTP error! status: ${response.status}`);\n        // }\n        // const data = await response.json();\n        // console.log('Hello Update', data)\n        // commit(\"SET_CONSULTANTS_SHOW\", data);\n        // return data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_NET_EARNINGS({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant/total_net_earnings', payload);\n        commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_NET_EARNINGS_FIXED_COST({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant/total_net_earnings_fixed_cost', payload);\n        commit(\"SET_CONSULTANTS_NET_EARNINGS_FIXED_COST\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async postData(url = '', data = {}) {\n      // Opciones por defecto estan marcadas con un *\n      const response = await fetch(url, {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin',\n        // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: 'follow',\n        // manual, *follow, error\n        referrerPolicy: 'no-referrer',\n        // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n  }\n};","map":{"version":3,"names":["Api","consultant","namespaced","state","consultants","showConsultants","netEarningsConsultants","netEarningsFixedCostConsultants","getters","GET_CONSULTANTS","mutations","SET_CONSULTANTS","payload","data","SET_CONSULTANTS_SHOW","SET_CONSULTANTS_NET_EARNINGS","SET_CONSULTANTS_NET_EARNINGS_FIXED_COST","actions","INDEX_CONSULTANTS","commit","response","fetch","ok","Error","status","json","console","log","error","Promise","reject","CONSULTANT_SHOW","url","configHeaders","postData","then","CONSULTANT_NET_EARNINGS","post","CONSULTANT_NET_EARNINGS_FIXED_COST","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify"],"sources":["C:/laragon/www/proyectos/Laravel/Mario/test_agence_frontend/src/store/modules/consultant/consultant.js"],"sourcesContent":["import Api from '../../../Services/index';\r\n\r\nexport const consultant = {\r\n    namespaced: true,\r\n    state: {\r\n        consultants: [],\r\n        showConsultants: [],\r\n        netEarningsConsultants: [],\r\n        netEarningsFixedCostConsultants: []\r\n    },\r\n    getters: {\r\n        GET_CONSULTANTS(state) {\r\n            return state.consultants;\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_CONSULTANTS(state, payload) {\r\n            state.consultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_SHOW(state, payload) {\r\n            state.showConsultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_NET_EARNINGS(state, payload) {\r\n            state.netEarningsConsultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_NET_EARNINGS_FIXED_COST(state, payload) {\r\n            state.netEarningsFixedCostConsultants = payload.data;\r\n        },\r\n    },\r\n    actions: {\r\n        async INDEX_CONSULTANTS({ commit }) {\r\n            try {\r\n                // const response = await Api.get(`/api/v1/consultant`);\r\n                // console.log(response, 'consultant index')\r\n                // commit(\"SET_CONSULTANTS\", response.data);\r\n                // return response;\r\n                // const headers = {\r\n                //     Accept: \"application/json\",\r\n                //     \"Content-Type\": \"application/json\",\r\n                //     \"X-localization\": \"es\"\r\n                // }\r\n                const response = await fetch(\"https://consultanttestagence.000webhostapp.com/api/v1/consultant\")\r\n                // .then(response => response.json())\r\n                // .then(data => (commit(\"SET_CONSULTANTS\", data)));\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                console.log(data)\r\n                commit(\"SET_CONSULTANTS\", data)\r\n                return data\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_SHOW({ commit }, payload) {\r\n            try {\r\n                const url = `https://consultanttestagence.000webhostapp.com/api/v1/consultant/`;\r\n                \r\n                const configHeaders = {\r\n                    // 'Content-Type':'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',\r\n                    // 'Access-Control-Allow-Headers': 'X-PINGOTHER, Content-Type',\r\n                    // 'Access-Control-Max-Age': 86400\r\n                    // \"Content-Type\": \"text/plain\"\r\n                    \r\n                };\r\n                // Ejemplo implementando el metodo POST:\r\n\r\n  \r\n                postData(`https://consultanttestagence.000webhostapp.com/api/v1/consultant/`, payload)\r\n                    .then(data => {\r\n                    console.log(data); // JSON data parsed by `data.json()` call\r\n                    });\r\n                // const response = await fetch(url, {\r\n                //     method: 'POST',\r\n                //     headers: {\r\n                //         \"Access-Control-Allow-Headers\" : \"Content-Type\",\r\n                //         // \"Access-Control-Allow-Origin\": \"*\",\r\n                //         \"Access-Control-Allow-Methods\": \"POST\"\r\n                //     },\r\n                //     body: JSON.stringify(payload)\r\n                // } );\r\n                // if (!response.ok) {\r\n                //     throw new Error(`HTTP error! status: ${response.status}`);\r\n                // }\r\n\r\n                // const data = await response.json();\r\n                // console.log('Hello Update', data)\r\n                // commit(\"SET_CONSULTANTS_SHOW\", data);\r\n\r\n                // return data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_NET_EARNINGS({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant/total_net_earnings', payload);\r\n                commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_NET_EARNINGS_FIXED_COST({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant/total_net_earnings_fixed_cost', payload);\r\n                commit(\"SET_CONSULTANTS_NET_EARNINGS_FIXED_COST\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async postData(url = '', data = {}) {\r\n            // Opciones por defecto estan marcadas con un *\r\n            const response = await fetch(url, {\r\n              method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n              mode: 'cors', // no-cors, *cors, same-origin\r\n              cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n              credentials: 'same-origin', // include, *same-origin, omit\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n              },\r\n              redirect: 'follow', // manual, *follow, error\r\n              referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n              body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n            });\r\n            return response.json(); // parses JSON response into native JavaScript objects\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}