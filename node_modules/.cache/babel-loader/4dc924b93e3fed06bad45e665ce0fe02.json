{"ast":null,"code":"import Api from '../../../Services/index';\nexport const consultant = {\n  namespaced: true,\n  state: {\n    consultants: [],\n    showConsultants: [],\n    netEarningsConsultants: [],\n    netEarningsFixedCostConsultants: []\n  },\n  getters: {\n    GET_CONSULTANTS(state) {\n      return state.consultants;\n    }\n\n  },\n  mutations: {\n    SET_CONSULTANTS(state, payload) {\n      state.consultants = payload.data;\n    },\n\n    SET_CONSULTANTS_SHOW(state, payload) {\n      state.showConsultants = payload.data;\n    },\n\n    SET_CONSULTANTS_NET_EARNINGS(state, payload) {\n      state.netEarningsConsultants = payload.data;\n    },\n\n    SET_CONSULTANTS_NET_EARNINGS_FIXED_COST(state, payload) {\n      state.netEarningsFixedCostConsultants = payload.data;\n    }\n\n  },\n  actions: {\n    async INDEX_CONSULTANTS({\n      commit\n    }) {\n      try {\n        // const response = await Api.get(`/api/v1/consultant`);\n        // const response = await fetch(`https://consultanttestagence.000webhostapp.com/api/v1/consultant`);\n        fetch('https://api.github.com/gists', {\n          method: 'post',\n          body: JSON.stringify(opts)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          ChromeSamples.log('Created Gist:', data.html_url);\n        }); // console.log(response, 'consultant index')\n\n        commit(\"SET_CONSULTANTS\", response.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_SHOW({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant', payload);\n        commit(\"SET_CONSULTANTS_SHOW\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_NET_EARNINGS({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant/total_net_earnings', payload);\n        commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    },\n\n    async CONSULTANT_NET_EARNINGS_FIXED_COST({\n      commit\n    }, payload) {\n      try {\n        const response = await Api.post('/api/v1/consultant/total_net_earnings_fixed_cost', payload);\n        commit(\"SET_CONSULTANTS_NET_EARNINGS_FIXED_COST\", response.data.data);\n        return response.data;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"names":["Api","consultant","namespaced","state","consultants","showConsultants","netEarningsConsultants","netEarningsFixedCostConsultants","getters","GET_CONSULTANTS","mutations","SET_CONSULTANTS","payload","data","SET_CONSULTANTS_SHOW","SET_CONSULTANTS_NET_EARNINGS","SET_CONSULTANTS_NET_EARNINGS_FIXED_COST","actions","INDEX_CONSULTANTS","commit","fetch","method","body","JSON","stringify","opts","then","response","json","ChromeSamples","log","html_url","error","Promise","reject","CONSULTANT_SHOW","post","CONSULTANT_NET_EARNINGS","CONSULTANT_NET_EARNINGS_FIXED_COST"],"sources":["C:/laragon/www/proyectos/Laravel/Mario/test_agence_frontend/src/store/modules/consultant/consultant.js"],"sourcesContent":["import Api from '../../../Services/index';\r\n\r\nexport const consultant = {\r\n    namespaced: true,\r\n    state: {\r\n        consultants: [],\r\n        showConsultants: [],\r\n        netEarningsConsultants: [],\r\n        netEarningsFixedCostConsultants: []\r\n    },\r\n    getters: {\r\n        GET_CONSULTANTS(state) {\r\n            return state.consultants;\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_CONSULTANTS(state, payload) {\r\n            state.consultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_SHOW(state, payload) {\r\n            state.showConsultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_NET_EARNINGS(state, payload) {\r\n            state.netEarningsConsultants = payload.data;\r\n        },\r\n        SET_CONSULTANTS_NET_EARNINGS_FIXED_COST(state, payload) {\r\n            state.netEarningsFixedCostConsultants = payload.data;\r\n        },\r\n    },\r\n    actions: {\r\n        async INDEX_CONSULTANTS({ commit }) {\r\n            try {\r\n                // const response = await Api.get(`/api/v1/consultant`);\r\n                // const response = await fetch(`https://consultanttestagence.000webhostapp.com/api/v1/consultant`);\r\n                fetch('https://api.github.com/gists', {\r\n                    method: 'post',\r\n                    body: JSON.stringify(opts)\r\n                }).then(function(response) {\r\n                    return response.json();\r\n                }).then(function(data) {\r\n                    ChromeSamples.log('Created Gist:', data.html_url);\r\n                });\r\n                // console.log(response, 'consultant index')\r\n                commit(\"SET_CONSULTANTS\", response.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_SHOW({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant', payload);\r\n                commit(\"SET_CONSULTANTS_SHOW\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_NET_EARNINGS({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant/total_net_earnings', payload);\r\n                commit(\"SET_CONSULTANTS_NET_EARNINGS\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n        async CONSULTANT_NET_EARNINGS_FIXED_COST({ commit }, payload) {\r\n            try {\r\n                const response = await Api.post('/api/v1/consultant/total_net_earnings_fixed_cost', payload);\r\n                commit(\"SET_CONSULTANTS_NET_EARNINGS_FIXED_COST\", response.data.data);\r\n                return response.data;\r\n            } catch (error) {\r\n                return Promise.reject(error);\r\n            }\r\n        },\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,EAAE,IADU;EAEtBC,KAAK,EAAE;IACHC,WAAW,EAAE,EADV;IAEHC,eAAe,EAAE,EAFd;IAGHC,sBAAsB,EAAE,EAHrB;IAIHC,+BAA+B,EAAE;EAJ9B,CAFe;EAQtBC,OAAO,EAAE;IACLC,eAAe,CAACN,KAAD,EAAQ;MACnB,OAAOA,KAAK,CAACC,WAAb;IACH;;EAHI,CARa;EAatBM,SAAS,EAAE;IACPC,eAAe,CAACR,KAAD,EAAQS,OAAR,EAAiB;MAC5BT,KAAK,CAACC,WAAN,GAAoBQ,OAAO,CAACC,IAA5B;IACH,CAHM;;IAIPC,oBAAoB,CAACX,KAAD,EAAQS,OAAR,EAAiB;MACjCT,KAAK,CAACE,eAAN,GAAwBO,OAAO,CAACC,IAAhC;IACH,CANM;;IAOPE,4BAA4B,CAACZ,KAAD,EAAQS,OAAR,EAAiB;MACzCT,KAAK,CAACG,sBAAN,GAA+BM,OAAO,CAACC,IAAvC;IACH,CATM;;IAUPG,uCAAuC,CAACb,KAAD,EAAQS,OAAR,EAAiB;MACpDT,KAAK,CAACI,+BAAN,GAAwCK,OAAO,CAACC,IAAhD;IACH;;EAZM,CAbW;EA2BtBI,OAAO,EAAE;IACL,MAAMC,iBAAN,CAAwB;MAAEC;IAAF,CAAxB,EAAoC;MAChC,IAAI;QACA;QACA;QACAC,KAAK,CAAC,8BAAD,EAAiC;UAClCC,MAAM,EAAE,MAD0B;UAElCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;QAF4B,CAAjC,CAAL,CAGGC,IAHH,CAGQ,UAASC,QAAT,EAAmB;UACvB,OAAOA,QAAQ,CAACC,IAAT,EAAP;QACH,CALD,EAKGF,IALH,CAKQ,UAASb,IAAT,EAAe;UACnBgB,aAAa,CAACC,GAAd,CAAkB,eAAlB,EAAmCjB,IAAI,CAACkB,QAAxC;QACH,CAPD,EAHA,CAWA;;QACAZ,MAAM,CAAC,iBAAD,EAAoBQ,QAAQ,CAACd,IAA7B,CAAN;QACA,OAAOc,QAAQ,CAACd,IAAhB;MACH,CAdD,CAcE,OAAOmB,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ,CAnBI;;IAoBL,MAAMG,eAAN,CAAsB;MAAEhB;IAAF,CAAtB,EAAkCP,OAAlC,EAA2C;MACvC,IAAI;QACA,MAAMe,QAAQ,GAAG,MAAM3B,GAAG,CAACoC,IAAJ,CAAS,oBAAT,EAA+BxB,OAA/B,CAAvB;QACAO,MAAM,CAAC,sBAAD,EAAyBQ,QAAQ,CAACd,IAAT,CAAcA,IAAvC,CAAN;QACA,OAAOc,QAAQ,CAACd,IAAhB;MACH,CAJD,CAIE,OAAOmB,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ,CA5BI;;IA6BL,MAAMK,uBAAN,CAA8B;MAAElB;IAAF,CAA9B,EAA0CP,OAA1C,EAAmD;MAC/C,IAAI;QACA,MAAMe,QAAQ,GAAG,MAAM3B,GAAG,CAACoC,IAAJ,CAAS,uCAAT,EAAkDxB,OAAlD,CAAvB;QACAO,MAAM,CAAC,8BAAD,EAAiCQ,QAAQ,CAACd,IAAT,CAAcA,IAA/C,CAAN;QACA,OAAOc,QAAQ,CAACd,IAAhB;MACH,CAJD,CAIE,OAAOmB,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ,CArCI;;IAsCL,MAAMM,kCAAN,CAAyC;MAAEnB;IAAF,CAAzC,EAAqDP,OAArD,EAA8D;MAC1D,IAAI;QACA,MAAMe,QAAQ,GAAG,MAAM3B,GAAG,CAACoC,IAAJ,CAAS,kDAAT,EAA6DxB,OAA7D,CAAvB;QACAO,MAAM,CAAC,yCAAD,EAA4CQ,QAAQ,CAACd,IAAT,CAAcA,IAA1D,CAAN;QACA,OAAOc,QAAQ,CAACd,IAAhB;MACH,CAJD,CAIE,OAAOmB,KAAP,EAAc;QACZ,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;MACH;IACJ;;EA9CI;AA3Ba,CAAnB"},"metadata":{},"sourceType":"module"}