{"ast":null,"code":"import moment from 'moment';\nimport 'moment/locale/es';\nexport default {\n  props: ['parentData'],\n  data: () => ({\n    listConsultants: []\n  }),\n  watch: {\n    parentData() {\n      if (this.parentData.length > 0) {\n        this.searchConsultants();\n      } else {\n        this.listConsultants = [];\n      }\n    }\n\n  },\n\n  created() {\n    this.searchConsultants();\n  },\n\n  methods: {\n    async searchConsultants() {\n      const itemConsultants = this.parentData.map(v => {\n        return v.co_usuario;\n      });\n      const request = {\n        item_consultants: itemConsultants\n      };\n\n      try {\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_SHOW\", request); //response service\n\n        const dataConsultan = response.data;\n        const listSelect = this.parentData;\n        const dataOrganizeConsultant = dataConsultan.reduce(function (acumulador, valorActual) {\n          const name = listSelect.find(consultant => {\n            return consultant.co_usuario === valorActual.co_usuario;\n          });\n          let valorActualAssignName = Object.assign({\n            name: name.no_usuario\n          }, valorActual);\n          acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || [];\n          acumulador[valorActual.co_usuario].push(valorActualAssignName);\n          return acumulador;\n        }, Object.create(null));\n        this.listConsultants = dataOrganizeConsultant;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    finalOperation(arrayObjectcs, key, type = true) {\n      if (!Array.isArray(arrayObjectcs)) {\n        return null;\n      }\n\n      let j = 1;\n      let total = arrayObjectcs[0][key];\n\n      if (!total) {\n        return 0;\n      }\n\n      while (j < arrayObjectcs.length) {\n        if (type) {\n          total += arrayObjectcs[j][key];\n        } else {\n          total -= arrayObjectcs[j][key];\n        }\n\n        j++;\n      }\n\n      return this.numFormat(total);\n    },\n\n    numFormat(item) {\n      return new Intl.NumberFormat('de-DE').format(item.toFixed(2));\n    } // nameConsultant(item) {\n    //   const name = this.parentData.selectConsultants.find(consultant => consultant.co_usuario === item ? consultant.no_usuario: null);\n    //   return name.no_usuario\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":"AA0DA;AACA;AACA;EACAA,qBADA;EAEAC;IACAC;EADA,EAFA;EAKAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA;;EARA,CALA;;EAeAC;IACA;EACA,CAjBA;;EAkBAC;IACA;MACA;QACA;MACA,CAFA;MAGA;QACAC;MADA;;MAGA;QACA,mFADA,CACA;;QAEA;QACA;QAEA;UACA;YACA;UACA,CAFA;UAGA;YAAAC;UAAA;UACAC;UACAA;UACA;QACA,CARA,EAQAC,mBARA;QAUA;MAEA,CAlBA,CAkBA;QACAC;MACA;IACA,CA7BA;;IA8BAC;MAEA;QACA;MACA;;MAEA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;UACAC;QACA,CAFA,MAGA;UACAA;QACA;;QACAC;MACA;;MACA;IACA,CArDA;;IAsDAC;MACA;IACA,CAxDA,CA0DA;IACA;IACA;IACA;;;EA7DA;AAlBA","names":["props","data","listConsultants","watch","parentData","created","methods","item_consultants","name","acumulador","Object","console","finalOperation","total","j","numFormat"],"sourceRoot":"src/components","sources":["PerformanceConsultants.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <v-simple-table \r\n        class=\"pt-3\"\r\n        dense \r\n        >\r\n          <template v-slot:default>\r\n            <tbody\r\n              v-for=\"(item, i) in listConsultants\"\r\n              :key=\"i\"\r\n            >\r\n            <br>\r\n              <tr>\r\n                  <td colspan=\"5\" class=\"border border-secondary table-active\">\r\n                  <span>{{ item[0].name }}</span>\r\n                  </td>\r\n              </tr>\r\n              <tr>\r\n                  <td class=\"text-center border border-secondary\" >\r\n                  <strong>Periodo</strong>\r\n                  </td>\r\n                  <td class=\"text-center border border-secondary\">\r\n                  <strong>Ganancias Netas</strong>\r\n                  </td>\r\n                  <td class=\"text-center border border-secondary\">\r\n                  <strong>Costo Fijo</strong>\r\n                  </td>\r\n                  <td class=\"text-center border border-secondary\">\r\n                  <strong>Comisi√≥n</strong>\r\n                  </td>\r\n                  <td class=\"text-center border border-secondary\">\r\n                  <strong>Beneficio</strong>\r\n                  </td>\r\n              </tr>\r\n              <tr\r\n                v-for=\"(lis, i) in item\"\r\n                :key=\"i\"\r\n              >\r\n                <td class=\"border border-secondary\" style=\"width: 250px;\">{{ lis.month }}</td>\r\n                <td class=\"text-right border border-secondary\">R$ {{ numFormat(lis.total_net_earnings)}}</td>\r\n                <td class=\"text-right border border-secondary\">R$ {{ numFormat(lis.fixed_cost) }}</td>\r\n                <td class=\"text-right border border-secondary\">R$ {{ numFormat(lis.total_commission) }}</td>\r\n                <td class=\"text-right border border-secondary\">R$ {{ numFormat(lis.total_lucro) }}</td>\r\n              </tr>\r\n              <tr>\r\n                  <td class=\"border border-secondary table-active\" style=\"width: 250px;\"><strong>SALDO</strong></td>\r\n                  <td class=\"text-right border border-secondary table-active\">R$ {{ finalOperation(item,'total_net_earnings') }}</td>\r\n                  <td class=\"text-right border border-secondary table-active\">R$ {{ finalOperation(item,'fixed_cost') }}</td>\r\n                  <td class=\"text-right border border-secondary table-active\">R$ {{ finalOperation(item,'total_commission') }}</td>\r\n                  <td class=\"text-right border border-secondary table-active\">R$ {{ finalOperation(item,'total_lucro',false) }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </template>\r\n        </v-simple-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nexport default {\r\n  props: ['parentData'],\r\n  data: () => ({\r\n    listConsultants: [],\r\n  }),\r\n  watch:{\r\n    parentData(){\r\n      if(this.parentData.length > 0) {\r\n        this.searchConsultants()\r\n      }\r\n      else{\r\n        this.listConsultants = []\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.searchConsultants()\r\n  },\r\n  methods: {\r\n    async searchConsultants(){\r\n      const itemConsultants = this.parentData.map((v) => {\r\n          return v.co_usuario\r\n      });\r\n      const request = {\r\n        item_consultants: itemConsultants\r\n      };\r\n      try {\r\n        const response = await this.$store.dispatch(\"consultant/CONSULTANT_SHOW\", request);//response service\r\n        \r\n        const dataConsultan = response.data;\r\n        const listSelect = this.parentData\r\n\r\n        const dataOrganizeConsultant = dataConsultan.reduce(function (acumulador, valorActual){\r\n          const name = listSelect.find((consultant) => { \r\n            return consultant.co_usuario === valorActual.co_usuario\r\n          });\r\n          let valorActualAssignName = Object.assign({name:name.no_usuario}, valorActual)\r\n          acumulador[valorActual.co_usuario] = acumulador[valorActualAssignName.co_usuario] || []\r\n          acumulador[valorActual.co_usuario].push(valorActualAssignName); \r\n          return acumulador;\r\n        }, Object.create(null));\r\n\r\n        this.listConsultants = dataOrganizeConsultant;\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    finalOperation(arrayObjectcs, key, type = true) {\r\n\r\n      if(!Array.isArray(arrayObjectcs)){\r\n        return null;\r\n      }\r\n\r\n      let j = 1;\r\n      let total = arrayObjectcs[0][key];\r\n\r\n      if(!total){\r\n        return 0;\r\n      }\r\n\r\n      while (j< arrayObjectcs.length) {\r\n        if(type){\r\n          total += arrayObjectcs[j][key];\r\n        }\r\n        else{\r\n          total -= arrayObjectcs[j][key];\r\n        }\r\n        j++;\r\n      }\r\n      return this.numFormat(total);\r\n    },\r\n    numFormat(item) {\r\n      return new Intl.NumberFormat('de-DE').format(item.toFixed(2));\r\n    },\r\n    \r\n    // nameConsultant(item) {\r\n    //   const name = this.parentData.selectConsultants.find(consultant => consultant.co_usuario === item ? consultant.no_usuario: null);\r\n    //   return name.no_usuario\r\n    // }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  tbody {\r\n      tr:hover{\r\n        background-color: transparent !important;\r\n      }\r\n  }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}